package mocks

import "github.com/stretchr/testify/mock"

// Executor is an autogenerated mock type for the Executor type
type Executor struct {
	mock.Mock
}

// CleanUp provides a mock function with given fields:
func (_m *Executor) CleanUp() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Execute provides a mock function with given fields: args
func (_m *Executor) Execute(args ...string) ([]byte, error) {
	ret := _m.Called(args)

	var r0 []byte
	if rf, ok := ret.Get(0).(func(...string) []byte); ok {
		r0 = rf(args...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]byte)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(...string) error); ok {
		r1 = rf(args...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ExecuteInDirectory provides a mock function with given fields: directory, args
func (_m *Executor) ExecuteInDirectory(directory string, args ...string) ([]byte, error) {
	ret := _m.Called(directory, args)

	var r0 []byte
	if rf, ok := ret.Get(0).(func(string, ...string) []byte); ok {
		r0 = rf(directory, args...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]byte)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, ...string) error); ok {
		r1 = rf(directory, args...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
