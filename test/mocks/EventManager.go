package mocks

import (
	"github.com/compozed/deployadactyl/interfaces"
	"github.com/compozed/deployadactyl/structs"
	"github.com/stretchr/testify/mock"
)

// EventManager is an autogenerated mock type for the EventManager type
type EventManager struct {
	mock.Mock
}

// AddHandler provides a mock function with given fields: handler, eventType
func (_m *EventManager) AddHandler(handler interfaces.Handler, eventType string) error {
	ret := _m.Called(handler, eventType)

	var r0 error
	if rf, ok := ret.Get(0).(func(interfaces.Handler, string) error); ok {
		r0 = rf(handler, eventType)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Emit provides a mock function with given fields: event
func (_m *EventManager) Emit(event structs.Event) error {
	ret := _m.Called(event)

	var r0 error
	if rf, ok := ret.Get(0).(func(structs.Event) error); ok {
		r0 = rf(event)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
